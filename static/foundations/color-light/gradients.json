[
  {
    "title": "Linear gradients",
    "file": "linear-gradients.md",
    "sections": [
      {
        "title": "Color stops",
        "text": "After the direction comes a series of color stops. At least two stops are required, but you can have as many as you like. Color stops include a color value and an optional percentage `%` or static length denoting how much of the gradient should include just that color.",
        "component": "linear-color-stops"
      },
      {
        "title": "Color hints",
        "text": "Color hints are a percentage or static length and are used to interpolate the progression of the gradient between the previous and next color stop. They are also calculated from the entire gradient progression, so setting `100%` as a hint after a color stop will only show that color for the rest of the gradient.",
        "component": "linear-color-hints"
      }
    ]
  },
  {
    "title": "Radial gradients",
    "file": "radial-gradients.md",
    "sections": [
      {
        "title": "Shape",
        "text": "A radial gradient’s shape can be denoted as `circle` or `ellipse`, with ellipse being the default.[citation](https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/radial-gradient#values)\n\nAn ellipse is based on the container’s dimensions, while a circle always has a `1:1` aspect ratio.",
        "component": "radial-gradient-shape"
      },
      {
        "title": "Size",
        "text": "A radial gradient’s size can be defined based on its container’s edges or as an explicit size. Edge values can be `closest-side`, `closest-corner`, `farthest-side`, and `farthest-corner` (the default value). Explicit sizes depend on the shape.\n\nFor circles, percentages are not supported due to the target axis being unknown. For ellipses, static lengths or percentages are allowed, but both the x and y axis values need to be defined. Both shapes value's translates to a radius, not the diameter.",
        "component": "radial-gradient-size"
      },
      {
        "title": "Position",
        "text": "A radial gradient’s position position value conforms to [position](https://developer.mozilla.org/en-US/docs/Web/CSS/position_value) type and defaults to `center`, but be aware that more complex options like offsetting from a side (e.g. `right -1rem`) are not supported. Also make sure to include the `at` keyword beforehand, even if omitting the shape and size values.",
        "component": "radial-gradient-position"
      }
    ]
  },
  {
    "title": "Conic gradients",
    "file": "conic-gradients.md",
    "sections": [
      {
        "title": "Color stops",
        "text": "Color stops in conic gradients are slightly different than color stops in linear and radial gradients, and are considered angular color stops[citation](https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/conic-gradient#angular-color-stop). Because a conic gradient rotates around a center origin point and back to itself, it takes up `360deg`. Each color stop can include any valid angle type _or_ percentage to denote how much of the gradient it takes up.",
        "component": "conic-gradients"
      }
    ]
  },
  {
    "title": "Repeating gradients",
    "file": "repeating-gradients.md",
    "sections": [
      {
        "title": "Repeating functions",
        "text": "The power of the `repeating-*` functions is that they doesn’t tile the computed gradient, they extend out until the entire image area is filled. The tricky part is that, if your initial gradient values fill the image area, nothing will repeat.",
        "component": "repeating-functions"
      },
      {
        "title": "Tiling",
        "text": "Gradients are simply computed images that (when applied as a background) can be controlled with all existing CSS background properties. Just like any other time you use `background-repeat`, you’re creating a tiling effect. And since repeating gradients are also computed images, you can combine both functions and tiling together for some interesting affects.",
        "component": "repeating-tiling"
      }
    ]
  },
  {
    "title": "Multiple gradients",
    "file": "multiple-gradients.md"
  },
  {
    "title": "Gradients and color spaces",
    "file": "color-spaces.md",
    "component": "color-spaces",
    "sections": [
      {
        "title": "Hue interpolation",
        "text": "Polar color spaces such as `hsl`, `hwb`, `lch`, and `oklch` also support all the hue interpolation keywords, indicating how to transition between colors.",
        "component": "hue-interpolation"
      }
    ]
  }
]
